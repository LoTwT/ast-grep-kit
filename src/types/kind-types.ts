// Auto-generated. Don't edit!

export type JSKind =
  | "declaration"
  | "expression"
  | "pattern"
  | "primary_expression"
  | "statement"
  | "arguments"
  | "array"
  | "array_pattern"
  | "arrow_function"
  | "assignment_expression"
  | "assignment_pattern"
  | "augmented_assignment_expression"
  | "await_expression"
  | "binary_expression"
  | "break_statement"
  | "call_expression"
  | "catch_clause"
  | "class"
  | "class_body"
  | "class_declaration"
  | "class_heritage"
  | "class_static_block"
  | "comment"
  | "computed_property_name"
  | "continue_statement"
  | "debugger_statement"
  | "decorator"
  | "do_statement"
  | "else_clause"
  | "empty_statement"
  | "export_clause"
  | "export_specifier"
  | "export_statement"
  | "expression_statement"
  | "field_definition"
  | "finally_clause"
  | "for_in_statement"
  | "for_statement"
  | "formal_parameters"
  | "function_declaration"
  | "function_expression"
  | "generator_function"
  | "generator_function_declaration"
  | "glimmer_closing_tag"
  | "glimmer_opening_tag"
  | "glimmer_template"
  | "if_statement"
  | "import"
  | "import_attribute"
  | "import_clause"
  | "import_specifier"
  | "import_statement"
  | "jsx_attribute"
  | "jsx_closing_element"
  | "jsx_element"
  | "jsx_expression"
  | "jsx_namespace_name"
  | "jsx_opening_element"
  | "jsx_self_closing_element"
  | "jsx_text"
  | "labeled_statement"
  | "lexical_declaration"
  | "member_expression"
  | "meta_property"
  | "method_definition"
  | "named_imports"
  | "namespace_export"
  | "namespace_import"
  | "new_expression"
  | "object"
  | "object_assignment_pattern"
  | "object_pattern"
  | "pair"
  | "pair_pattern"
  | "parenthesized_expression"
  | "program"
  | "regex"
  | "rest_pattern"
  | "return_statement"
  | "sequence_expression"
  | "spread_element"
  | "statement_block"
  | "string"
  | "subscript_expression"
  | "switch_body"
  | "switch_case"
  | "switch_default"
  | "switch_statement"
  | "template_string"
  | "template_substitution"
  | "ternary_expression"
  | "throw_statement"
  | "try_statement"
  | "unary_expression"
  | "update_expression"
  | "variable_declaration"
  | "variable_declarator"
  | "while_statement"
  | "with_statement"
  | "yield_expression"
  | "!"
  | "!="
  | "!=="
  | '"'
  | "${"
  | "%"
  | "%="
  | "&"
  | "&&"
  | "&&="
  | "&="
  | "'"
  | "("
  | ")"
  | "*"
  | "**"
  | "**="
  | "*="
  | "+"
  | "++"
  | "+="
  | ","
  | "-"
  | "--"
  | "-="
  | "."
  | "..."
  | "/"
  | "/="
  | "/>"
  | ":"
  | ";"
  | "<"
  | "</"
  | "</template>"
  | "<<"
  | "<<="
  | "<="
  | "<template>"
  | "="
  | "=="
  | "==="
  | "=>"
  | ">"
  | ">="
  | ">>"
  | ">>="
  | ">>>"
  | ">>>="
  | "?"
  | "??"
  | "??="
  | "@"
  | "["
  | "]"
  | "^"
  | "^="
  | "`"
  | "as"
  | "async"
  | "await"
  | "break"
  | "case"
  | "catch"
  | "class"
  | "const"
  | "continue"
  | "debugger"
  | "default"
  | "delete"
  | "do"
  | "else"
  | "escape_sequence"
  | "export"
  | "extends"
  | "false"
  | "finally"
  | "for"
  | "from"
  | "function"
  | "get"
  | "hash_bang_line"
  | "html_character_reference"
  | "html_comment"
  | "identifier"
  | "if"
  | "import"
  | "in"
  | "instanceof"
  | "let"
  | "new"
  | "null"
  | "number"
  | "of"
  | "optional_chain"
  | "private_property_identifier"
  | "property_identifier"
  | "regex_flags"
  | "regex_pattern"
  | "return"
  | "set"
  | "shorthand_property_identifier"
  | "shorthand_property_identifier_pattern"
  | "statement_identifier"
  | "static"
  | "static get"
  | "string_fragment"
  | "super"
  | "switch"
  | "target"
  | "this"
  | "throw"
  | "true"
  | "try"
  | "typeof"
  | "undefined"
  | "var"
  | "void"
  | "while"
  | "with"
  | "yield"
  | "{"
  | "|"
  | "|="
  | "||"
  | "||="
  | "}"
  | "~"

export type TSKind =
  | "_primary_type"
  | "declaration"
  | "expression"
  | "pattern"
  | "primary_expression"
  | "statement"
  | "abstract_class_declaration"
  | "abstract_method_signature"
  | "accessibility_modifier"
  | "adding_type_annotation"
  | "ambient_declaration"
  | "arguments"
  | "array"
  | "array_pattern"
  | "array_type"
  | "arrow_function"
  | "as_expression"
  | "asserts"
  | "asserts_annotation"
  | "assignment_expression"
  | "assignment_pattern"
  | "augmented_assignment_expression"
  | "await_expression"
  | "binary_expression"
  | "break_statement"
  | "call_expression"
  | "call_signature"
  | "catch_clause"
  | "class"
  | "class_body"
  | "class_declaration"
  | "class_heritage"
  | "class_static_block"
  | "comment"
  | "computed_property_name"
  | "conditional_type"
  | "constraint"
  | "construct_signature"
  | "constructor_type"
  | "continue_statement"
  | "debugger_statement"
  | "decorator"
  | "default_type"
  | "do_statement"
  | "else_clause"
  | "empty_statement"
  | "enum_assignment"
  | "enum_body"
  | "enum_declaration"
  | "existential_type"
  | "export_clause"
  | "export_specifier"
  | "export_statement"
  | "expression_statement"
  | "extends_clause"
  | "extends_type_clause"
  | "finally_clause"
  | "flow_maybe_type"
  | "for_in_statement"
  | "for_statement"
  | "formal_parameters"
  | "function_declaration"
  | "function_expression"
  | "function_signature"
  | "function_type"
  | "generator_function"
  | "generator_function_declaration"
  | "generic_type"
  | "glimmer_closing_tag"
  | "glimmer_opening_tag"
  | "glimmer_template"
  | "identifier"
  | "if_statement"
  | "implements_clause"
  | "import"
  | "import_alias"
  | "import_attribute"
  | "import_clause"
  | "import_require_clause"
  | "import_specifier"
  | "import_statement"
  | "index_signature"
  | "index_type_query"
  | "infer_type"
  | "instantiation_expression"
  | "interface_body"
  | "interface_declaration"
  | "internal_module"
  | "intersection_type"
  | "jsx_attribute"
  | "jsx_closing_element"
  | "jsx_element"
  | "jsx_expression"
  | "jsx_namespace_name"
  | "jsx_opening_element"
  | "jsx_self_closing_element"
  | "jsx_text"
  | "labeled_statement"
  | "lexical_declaration"
  | "literal_type"
  | "lookup_type"
  | "mapped_type_clause"
  | "member_expression"
  | "meta_property"
  | "method_definition"
  | "method_signature"
  | "module"
  | "named_imports"
  | "namespace_export"
  | "namespace_import"
  | "nested_identifier"
  | "nested_type_identifier"
  | "new_expression"
  | "non_null_expression"
  | "object"
  | "object_assignment_pattern"
  | "object_pattern"
  | "object_type"
  | "omitting_type_annotation"
  | "opting_type_annotation"
  | "optional_chain"
  | "optional_parameter"
  | "optional_type"
  | "override_modifier"
  | "pair"
  | "pair_pattern"
  | "parenthesized_expression"
  | "parenthesized_type"
  | "predefined_type"
  | "program"
  | "property_signature"
  | "public_field_definition"
  | "readonly_type"
  | "regex"
  | "required_parameter"
  | "rest_pattern"
  | "rest_type"
  | "return_statement"
  | "satisfies_expression"
  | "sequence_expression"
  | "spread_element"
  | "statement_block"
  | "string"
  | "subscript_expression"
  | "switch_body"
  | "switch_case"
  | "switch_default"
  | "switch_statement"
  | "template_literal_type"
  | "template_string"
  | "template_substitution"
  | "template_type"
  | "ternary_expression"
  | "throw_statement"
  | "try_statement"
  | "tuple_type"
  | "type_alias_declaration"
  | "type_annotation"
  | "type_arguments"
  | "type_assertion"
  | "type_parameter"
  | "type_parameters"
  | "type_predicate"
  | "type_predicate_annotation"
  | "type_query"
  | "unary_expression"
  | "union_type"
  | "update_expression"
  | "variable_declaration"
  | "variable_declarator"
  | "while_statement"
  | "with_statement"
  | "yield_expression"
  | "!"
  | "!="
  | "!=="
  | '"'
  | "${"
  | "%"
  | "%="
  | "&"
  | "&&"
  | "&&="
  | "&="
  | "'"
  | "("
  | ")"
  | "*"
  | "**"
  | "**="
  | "*="
  | "+"
  | "++"
  | "+="
  | "+?:"
  | ","
  | "-"
  | "--"
  | "-="
  | "-?:"
  | "."
  | "..."
  | "/"
  | "/="
  | "/>"
  | ":"
  | ";"
  | "<"
  | "</"
  | "</template>"
  | "<<"
  | "<<="
  | "<="
  | "<template>"
  | "="
  | "=="
  | "==="
  | "=>"
  | ">"
  | ">="
  | ">>"
  | ">>="
  | ">>>"
  | ">>>="
  | "?"
  | "?."
  | "?:"
  | "??"
  | "??="
  | "@"
  | "["
  | "]"
  | "^"
  | "^="
  | "`"
  | "abstract"
  | "any"
  | "as"
  | "asserts"
  | "async"
  | "await"
  | "boolean"
  | "break"
  | "case"
  | "catch"
  | "class"
  | "const"
  | "continue"
  | "debugger"
  | "declare"
  | "default"
  | "delete"
  | "do"
  | "else"
  | "enum"
  | "escape_sequence"
  | "export"
  | "extends"
  | "false"
  | "finally"
  | "for"
  | "from"
  | "function"
  | "get"
  | "global"
  | "hash_bang_line"
  | "html_character_reference"
  | "html_comment"
  | "if"
  | "implements"
  | "import"
  | "in"
  | "infer"
  | "instanceof"
  | "interface"
  | "is"
  | "keyof"
  | "let"
  | "module"
  | "namespace"
  | "never"
  | "new"
  | "null"
  | "number"
  | "number"
  | "object"
  | "of"
  | "override"
  | "private"
  | "private_property_identifier"
  | "property_identifier"
  | "protected"
  | "public"
  | "readonly"
  | "regex_flags"
  | "regex_pattern"
  | "require"
  | "return"
  | "satisfies"
  | "set"
  | "shorthand_property_identifier"
  | "shorthand_property_identifier_pattern"
  | "statement_identifier"
  | "static"
  | "string"
  | "string_fragment"
  | "super"
  | "switch"
  | "symbol"
  | "target"
  | "this"
  | "this_type"
  | "throw"
  | "true"
  | "try"
  | "type"
  | "type_identifier"
  | "typeof"
  | "undefined"
  | "unique symbol"
  | "unknown"
  | "using"
  | "var"
  | "void"
  | "while"
  | "with"
  | "yield"
  | "{"
  | "{|"
  | "|"
  | "|="
  | "||"
  | "||="
  | "|}"
  | "}"
  | "~"

export type TSXKind =
  | "_primary_type"
  | "declaration"
  | "expression"
  | "pattern"
  | "primary_expression"
  | "statement"
  | "abstract_class_declaration"
  | "abstract_method_signature"
  | "accessibility_modifier"
  | "adding_type_annotation"
  | "ambient_declaration"
  | "arguments"
  | "array"
  | "array_pattern"
  | "array_type"
  | "arrow_function"
  | "as_expression"
  | "asserts"
  | "asserts_annotation"
  | "assignment_expression"
  | "assignment_pattern"
  | "augmented_assignment_expression"
  | "await_expression"
  | "binary_expression"
  | "break_statement"
  | "call_expression"
  | "call_signature"
  | "catch_clause"
  | "class"
  | "class_body"
  | "class_declaration"
  | "class_heritage"
  | "class_static_block"
  | "comment"
  | "computed_property_name"
  | "conditional_type"
  | "constraint"
  | "construct_signature"
  | "constructor_type"
  | "continue_statement"
  | "debugger_statement"
  | "decorator"
  | "default_type"
  | "do_statement"
  | "else_clause"
  | "empty_statement"
  | "enum_assignment"
  | "enum_body"
  | "enum_declaration"
  | "existential_type"
  | "export_clause"
  | "export_specifier"
  | "export_statement"
  | "expression_statement"
  | "extends_clause"
  | "extends_type_clause"
  | "finally_clause"
  | "flow_maybe_type"
  | "for_in_statement"
  | "for_statement"
  | "formal_parameters"
  | "function_declaration"
  | "function_expression"
  | "function_signature"
  | "function_type"
  | "generator_function"
  | "generator_function_declaration"
  | "generic_type"
  | "glimmer_closing_tag"
  | "glimmer_opening_tag"
  | "glimmer_template"
  | "identifier"
  | "if_statement"
  | "implements_clause"
  | "import"
  | "import_alias"
  | "import_attribute"
  | "import_clause"
  | "import_require_clause"
  | "import_specifier"
  | "import_statement"
  | "index_signature"
  | "index_type_query"
  | "infer_type"
  | "instantiation_expression"
  | "interface_body"
  | "interface_declaration"
  | "internal_module"
  | "intersection_type"
  | "jsx_attribute"
  | "jsx_closing_element"
  | "jsx_element"
  | "jsx_expression"
  | "jsx_namespace_name"
  | "jsx_opening_element"
  | "jsx_self_closing_element"
  | "jsx_text"
  | "labeled_statement"
  | "lexical_declaration"
  | "literal_type"
  | "lookup_type"
  | "mapped_type_clause"
  | "member_expression"
  | "meta_property"
  | "method_definition"
  | "method_signature"
  | "module"
  | "named_imports"
  | "namespace_export"
  | "namespace_import"
  | "nested_identifier"
  | "nested_type_identifier"
  | "new_expression"
  | "non_null_expression"
  | "object"
  | "object_assignment_pattern"
  | "object_pattern"
  | "object_type"
  | "omitting_type_annotation"
  | "opting_type_annotation"
  | "optional_chain"
  | "optional_parameter"
  | "optional_type"
  | "override_modifier"
  | "pair"
  | "pair_pattern"
  | "parenthesized_expression"
  | "parenthesized_type"
  | "predefined_type"
  | "program"
  | "property_signature"
  | "public_field_definition"
  | "readonly_type"
  | "regex"
  | "required_parameter"
  | "rest_pattern"
  | "rest_type"
  | "return_statement"
  | "satisfies_expression"
  | "sequence_expression"
  | "spread_element"
  | "statement_block"
  | "string"
  | "subscript_expression"
  | "switch_body"
  | "switch_case"
  | "switch_default"
  | "switch_statement"
  | "template_literal_type"
  | "template_string"
  | "template_substitution"
  | "template_type"
  | "ternary_expression"
  | "throw_statement"
  | "try_statement"
  | "tuple_type"
  | "type_alias_declaration"
  | "type_annotation"
  | "type_arguments"
  | "type_parameter"
  | "type_parameters"
  | "type_predicate"
  | "type_predicate_annotation"
  | "type_query"
  | "unary_expression"
  | "union_type"
  | "update_expression"
  | "variable_declaration"
  | "variable_declarator"
  | "while_statement"
  | "with_statement"
  | "yield_expression"
  | "!"
  | "!="
  | "!=="
  | '"'
  | "${"
  | "%"
  | "%="
  | "&"
  | "&&"
  | "&&="
  | "&="
  | "'"
  | "("
  | ")"
  | "*"
  | "**"
  | "**="
  | "*="
  | "+"
  | "++"
  | "+="
  | "+?:"
  | ","
  | "-"
  | "--"
  | "-="
  | "-?:"
  | "."
  | "..."
  | "/"
  | "/="
  | "/>"
  | ":"
  | ";"
  | "<"
  | "</"
  | "</template>"
  | "<<"
  | "<<="
  | "<="
  | "<template>"
  | "="
  | "=="
  | "==="
  | "=>"
  | ">"
  | ">="
  | ">>"
  | ">>="
  | ">>>"
  | ">>>="
  | "?"
  | "?."
  | "?:"
  | "??"
  | "??="
  | "@"
  | "["
  | "]"
  | "^"
  | "^="
  | "`"
  | "abstract"
  | "any"
  | "as"
  | "asserts"
  | "async"
  | "await"
  | "boolean"
  | "break"
  | "case"
  | "catch"
  | "class"
  | "const"
  | "continue"
  | "debugger"
  | "declare"
  | "default"
  | "delete"
  | "do"
  | "else"
  | "enum"
  | "escape_sequence"
  | "export"
  | "extends"
  | "false"
  | "finally"
  | "for"
  | "from"
  | "function"
  | "get"
  | "global"
  | "hash_bang_line"
  | "html_character_reference"
  | "html_comment"
  | "if"
  | "implements"
  | "import"
  | "in"
  | "infer"
  | "instanceof"
  | "interface"
  | "is"
  | "keyof"
  | "let"
  | "module"
  | "namespace"
  | "never"
  | "new"
  | "null"
  | "number"
  | "number"
  | "object"
  | "of"
  | "override"
  | "private"
  | "private_property_identifier"
  | "property_identifier"
  | "protected"
  | "public"
  | "readonly"
  | "regex_flags"
  | "regex_pattern"
  | "require"
  | "return"
  | "satisfies"
  | "set"
  | "shorthand_property_identifier"
  | "shorthand_property_identifier_pattern"
  | "statement_identifier"
  | "static"
  | "string"
  | "string_fragment"
  | "super"
  | "switch"
  | "symbol"
  | "target"
  | "this"
  | "this_type"
  | "throw"
  | "true"
  | "try"
  | "type"
  | "type_identifier"
  | "typeof"
  | "undefined"
  | "unique symbol"
  | "unknown"
  | "using"
  | "var"
  | "void"
  | "while"
  | "with"
  | "yield"
  | "{"
  | "{|"
  | "|"
  | "|="
  | "||"
  | "||="
  | "|}"
  | "}"
  | "~"

export type HTMLKind =
  | "attribute"
  | "doctype"
  | "document"
  | "element"
  | "end_tag"
  | "erroneous_end_tag"
  | "quoted_attribute_value"
  | "script_element"
  | "self_closing_tag"
  | "start_tag"
  | "style_element"
  | '"'
  | "'"
  | "/>"
  | "<"
  | "<!"
  | "</"
  | "="
  | ">"
  | "attribute_name"
  | "attribute_value"
  | "comment"
  | "doctype"
  | "entity"
  | "erroneous_end_tag_name"
  | "raw_text"
  | "tag_name"
  | "text"

export type CSSKind =
  | "adjacent_sibling_selector"
  | "arguments"
  | "at_rule"
  | "attribute_name"
  | "attribute_selector"
  | "binary_expression"
  | "binary_query"
  | "block"
  | "call_expression"
  | "charset_statement"
  | "child_selector"
  | "class_selector"
  | "color_value"
  | "declaration"
  | "descendant_selector"
  | "feature_query"
  | "float_value"
  | "grid_value"
  | "id_selector"
  | "import_statement"
  | "integer_value"
  | "keyframe_block"
  | "keyframe_block_list"
  | "keyframes_statement"
  | "media_statement"
  | "namespace_selector"
  | "namespace_statement"
  | "parenthesized_query"
  | "parenthesized_value"
  | "postcss_statement"
  | "pseudo_class_selector"
  | "pseudo_element_selector"
  | "rule_set"
  | "selector_query"
  | "selectors"
  | "sibling_selector"
  | "string_value"
  | "stylesheet"
  | "supports_statement"
  | "unary_query"
  | "universal_selector"
  | '"'
  | "#"
  | "$="
  | "'"
  | "("
  | ")"
  | "*"
  | "*="
  | "+"
  | ","
  | "-"
  | "."
  | "/"
  | ":"
  | "::"
  | ";"
  | "="
  | ">"
  | "@charset"
  | "@import"
  | "@keyframes"
  | "@media"
  | "@namespace"
  | "@supports"
  | "["
  | "]"
  | "^="
  | "and"
  | "at_keyword"
  | "class_name"
  | "comment"
  | "feature_name"
  | "from"
  | "function_name"
  | "id_name"
  | "important"
  | "js_comment"
  | "keyframes_name"
  | "keyword_query"
  | "namespace_name"
  | "nesting_selector"
  | "not"
  | "only"
  | "or"
  | "plain_value"
  | "property_name"
  | "selector"
  | "tag_name"
  | "to"
  | "unit"
  | "{"
  | "|"
  | "|="
  | "}"
  | "~"
  | "~="
